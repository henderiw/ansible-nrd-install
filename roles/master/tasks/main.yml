---
# - name: Ensure group "nrd" exists
#   group:
#     name: nrd
#     state: present

# - name: Add the user 'nrd'
#   user:
#     name: nrd
#     group: nrd

# - name: Create glusterfs /mnt directories
#   file:
#       path: "{{ item }}"
#       owner: "nrd"
#       group: "nrd"
#       state: directory
#       mode: 0755
#   with_items:
#     - /mnt/glusterfs/snmp
#     - /mnt/glusterfs/kpikci
#     - /mnt/glusterfs/cli
#     - /mnt/glusterfs/cli/system
#     - /mnt/glusterfs/cli/user
#     - /mnt/glusterfs/system
#     - /mnt/glusterfs/system/user
#   become: yes
#   become_user: root
#   become_method: sudo

# - name: Create a symbolic link
#   file:
#       src: "{{ item.src }}"
#       dest: "{{ item.dest }}"
#       owner: "nrd"
#       group: "nrd"
#       state: link
#   with_items:
#     - { src: "/mnt/glusterfs/snmp", dest: "/var/lib/snmp" }
#     - { src: "/mnt/glusterfs/kpikci", dest: "/var/lib/kpikci" }
#     - { src: "/mnt/glusterfs/cli", dest: "/var/lib/cli" }
#   become: yes
#   become_user: root
#   become_method: sudo

# # - name: "Create glusterfs mnt directories"
# #   file:
# #       path: "{{ item }}"
# #       owner: "nrd"
# #       group: "nrd"
# #       state: directory
# #       mode: 0755
# #   with_items:
# #     - /var/lib/cli
# #   become: yes
# #   become_user: root
# #   become_method: sudo

# - name: copy docker files to /tmp
#   copy:
#     src: "/home/henderiw/{{ nrd_dir }}/{{ docker_dir }}/{{ item }}"
#     dest: "/tmp/{{ item }}"
#     mode: 0644
#   with_items:
#     - nrd.tar.gz
#     - nrddb.tar.gz
#     - collectd.tar.gz
#     - mariadb.tar.gz
#     - mysqld-exporter.tar.gz

# - name: Load image from archive and push to a private registry
#   docker_image:
#     name: nrd
#     tag: NRD_11_0_R5
#     push: yes
#     load_path: /tmp/nrd.tar.gz
#     source: load
#   become: yes
#   become_user: root
#   become_method: sudo

# - name: load docker images
#   command: docker load -i /tmp/{{ item }}
#   with_items:
#     - nrd.tar.gz
#     - nrddb.tar.gz
#     - collectd.tar.gz
#     - mariadb.tar.gz
#     - mysqld-exporter.tar.gz
#   become: yes
#   become_user: root
#   become_method: sudo

# - name: Load image from archive and push to a private registry
#   docker_image:
#     name: "localhost:5000/{{ item.name }}"
#     push: yes
#     load_path: "/tmp/{{ item.filename }}"
#     source: load
#   with_items:
#     - { name: "nrd", filename: "nrd.tar.gz" }
#     - { name: "nrddb", filename: "nrddb.tar.gz" }
#     - { name: "collectd", filename: "collectd.tar.gz" }
#     - { name: "mariadb", filename: "mariadb.tar.gz" }
#     - { name: "mysqld-exporter", filename: "mysqld-exporter.tar.gz" }

# - name: copy helm charts to /tmp
#   copy:
#     src: "/home/henderiw/{{ nrd_dir }}/{{ helm_dir }}"
#     dest: "/tmp/"
#     mode: 0644

# - name: todo helm chart upload

- name: copy script admin_tech_support.py file
  copy:
    src: "/home/henderiw/{{ nrd_dir }}/{{ script_dir }}/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    mode: 0755
  with_items:
    - admin_tech_support.py

- name: copy script rpc.py file to /usr/bin/hostRpc
  copy:
    src: "/home/henderiw/{{ nrd_dir }}/{{ script_dir }}/{{ item }}"
    dest: "/usr/bin/hostRpc"
    mode: 0755
  with_items:
    - "rpc.py"

- name: copy nrdcli.service to /tmp
  copy:
    src: "/home/henderiw/{{ nrd_dir }}/{{ script_dir }}/{{ item }}"
    dest: "/usr/lib/systemd/system/{{ item }}"
    mode: 0644
  with_items:
    - nrdcli.service

- name: enable service nrdcli
  systemd:
    name: nrdcli
    enabled: yes

- name: daemon reload
  systemd:
    daemon_reload: yes

- name: restart service nrdcli
  systemd:
    state: restarted
    daemon_reload: yes
    name: nrdcli

- name: copy script find_service_worker file to /usr/local/bin
  copy:
    src: "/home/henderiw/{{ nrd_dir }}/{{ script_dir }}/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
  with_items:
    - find_service_worker

- name: copy pv/pvc yaml file to /tmp
  copy:
    src: "/home/henderiw/{{ nrd_dir }}/{{ db_dir }}/{{ item }}"
    dest: "/tmp/{{ item }}"
    mode: 0755
  with_items:
    - nrddb-pv.yaml
    - nrddb-pvc.yaml

# - name: Create a nrd-database namespace
#   k8s:
#     name: nrd-database
#     api_version: v1
#     kind: Namespace
#     state: present

# - name: Create k8s pv/pvc definition from a file
#   k8s:
#     state: present
#     src: /tmp/{{ item }}
#   with_items:
#     - nrddb-pv.yaml
#     - nrddb-pvc.yaml

# - name: create kubernetes namespace in k8s
#   command: kubectl create namespace nrd-database
#   become: yes
#   become_user: henderiw

- name: create pv/pvc objects in k8s
  command: kubectl create -f /tmp/{{ item }}
  with_items:
    - nrddb-pv.yaml
    - nrddb-pvc.yaml
  become: yes
  become_user: henderiw

